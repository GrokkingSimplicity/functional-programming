## 기억에 남는 문장들
- 함수형 프로그래머는 불변 데이터 구조를 만들기 위해 두 가지 원칙을 사용합니다.(p.37)
  - 카피-온-라이트 변경할 때 복사본을 만듭니다.
  - 방어적 복사 보관하려고 하는 데이터의 복사본을 만듭니다.
- 지금 시점에서 계산을 더 나눌 수도 있습니다. 그리고 계산을 나누면 구하기 쉽습니다. 하지만 충분히 구현하기 쉽다고 생각되는 시점에서 더 나누는 것을 멈춰야 합니다.(p.46)
- 액션을 쓰는 순간 코드 전체로 퍼져나가기 때문에 사용할 때 조심해야 합니다.(p.56)

## 실습 코드
/** 추가 예정 */

## 느낀점
- 충분히 구현하기 쉽다고 생각되는 시점에 대한 각자의 기준이 궁금합니다. 저는 같은 코드가 반복된다고 느낄 때 멈추는 편입니다. 확장성을 갖는게 아니라 유사한 형태의 계산 많이 늘어난다고 생각할 때, 그리고 그 계산이 당장 재사용되지 않을 때 분리를 멈춥니다.
- React 등 사용 중인 라이브러리의 특성을 고려하면 실제 코드에 완벽하게 적용하긴 어렵다고 느꼈습니다. 그럼에도 계산 함수를 컴포넌트 밖으로 빼서 정의해둔다면 React 환경에서 성능적인 이점 또한 가져갈 수 있을 것 같다. 처음에는 괴롭겠지만 분리해서 재사용 가능한 함수가 많아질수록 개발 효율성이 높아질 것 같다.
- 책 너무 재밌읍니다..🤩
